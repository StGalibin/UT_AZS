#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает строковый идентификатор форм обработки "ЖурналДокументовЗакупки" по умолчанию.
//
// ВозвращаемоеЗначение:
//	Строка - идентификатор форм обработки "ЖурналДокументовЗакупки" по умолчанию.
//
Функция КлючНазначенияФормыПоУмолчанию() Экспорт
	
	Возврат "ДокументыЗакупки";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриОпределенииКомандПодключенныхКОбъекту(Команды) Экспорт
	
	МассивКомандОтчетов = Команды.НайтиСтроки(Новый Структура("Вид", "Отчеты"));
	МассивКомандПечати = Команды.НайтиСтроки(Новый Структура("Вид", "Печать"));
	
	МенеджерСостояниеВыполненияДокументов = Метаданные.Отчеты.СостояниеВыполненияДокументов.ПолноеИмя();
	МенеджерСостояниеРасчетовСПоставщиками = Метаданные.Отчеты.СостояниеРасчетовСПоставщиками.ПолноеИмя();
	МенеджерКарточкаРасчетовСПоставщиками = Метаданные.Отчеты.КарточкаРасчетовСПоставщиками.ПолноеИмя();
	МенеджерКарточкаРасчетовПоПринятойВозвратнойТаре = Метаданные.Отчеты.КарточкаРасчетовПоПринятойВозвратнойТаре.ПолноеИмя();
	МенеджерОтклоненияОтУсловийЗакупок = Метаданные.Отчеты.ОтклоненияОтУсловийЗакупок.ПолноеИмя();
	МенеджерАнализЦенПоставщиков = Метаданные.Отчеты.АнализЦенПоставщиков.ПолноеИмя();
	МенеджерАнализРасхожденийПриПоступленииАлкогольнойПродукции = Метаданные.Отчеты.АнализРасхожденийПриПоступленииАлкогольнойПродукции.ПолноеИмя();
	
	Для каждого ТекКоманда Из МассивКомандОтчетов Цикл
		Если ТекКоманда.Менеджер = МенеджерСостояниеВыполненияДокументов Тогда
			ТекКоманда.Порядок = 1;
			ТекКоманда.ВидимостьВФормах = "СписокДокументов, ФормаСозданныеДокументы";
		КонецЕсли;
		Если ТекКоманда.Менеджер = МенеджерСостояниеРасчетовСПоставщиками Тогда
			ТекКоманда.Важность = "Обычное";
			ТекКоманда.Порядок = 1;
		КонецЕсли;
		Если ТекКоманда.Менеджер = МенеджерКарточкаРасчетовСПоставщиками Тогда
			ТекКоманда.Важность = "Обычное";
			ТекКоманда.Порядок = 2;
		КонецЕсли;
		Если ТекКоманда.Менеджер = МенеджерКарточкаРасчетовПоПринятойВозвратнойТаре Тогда
			ТекКоманда.Важность = "Обычное";
			ТекКоманда.Порядок = 3;
		КонецЕсли;
		Если ТекКоманда.Менеджер = МенеджерОтклоненияОтУсловийЗакупок Тогда
			ТекКоманда.Важность = "СмТакже";
			ТекКоманда.Порядок = 1;
		КонецЕсли;
		Если ТекКоманда.Менеджер = МенеджерАнализЦенПоставщиков Тогда
			ТекКоманда.Важность = "СмТакже";
			ТекКоманда.Порядок = 2;
		КонецЕсли;
		Если ТекКоманда.Менеджер = МенеджерАнализРасхожденийПриПоступленииАлкогольнойПродукции Тогда
			ТекКоманда.Важность = "Обычное";
			ТекКоманда.Порядок = 1;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекКоманда Из МассивКомандПечати Цикл
		ТекКоманда.ВидимостьВФормах = "СписокДокументов";
	КонецЦикла;
	
КонецПроцедуры

#Область ФормированиеГиперссылкиВЖурналеЗакупок 

Функция ТекстЗапросаЗаказыКОформлению(Организация = Неопределено, Склад = Неопределено, МассивСсылок = Неопределено)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПоставщикам.ЗаказПоставщику КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(, ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику И &УсловиеОтбора) КАК ЗаказыПоставщикам
	|ГДЕ
	|	ЗаказыПоставщикам.КОформлениюОстаток > 0";
	
	УсловиеОтбора = "ИСТИНА";
	Если ЗначениеЗаполнено(Организация) Тогда
		УсловиеОтбора = УсловиеОтбора + "
		|И ЗаказПоставщику.Организация = &Организация";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Склад) Тогда
		УсловиеОтбора = УсловиеОтбора + "
		|И ЗаказПоставщику.Склад = &Склад";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МассивСсылок) Тогда
		УсловиеОтбора = УсловиеОтбора + "
		|И ЗаказПоставщику.Ссылка В (&МассивСсылок)";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбора", УсловиеОтбора);
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаРаспоряженияНаПриемку(Организация = Неопределено, Склад = Неопределено, МассивСсылок = Неопределено)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаРаспоряжений.ДокументПоступления КАК Ссылка,
	|	МАКСИМУМ(ТаблицаРаспоряжений.Склад) КАК Склад,
	|	МАКСИМУМ(ТаблицаРаспоряжений.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(ТаблицаРаспоряжений.Характеристика) КАК Характеристика,
	|	МАКСИМУМ(ТаблицаРаспоряжений.Назначение) КАК Назначение,
	|	МАКСИМУМ(ТаблицаРаспоряжений.Серия) КАК Серия,
	|	МАКСИМУМ(ТаблицаРаспоряжений.Отправитель) КАК Отправитель
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(
	|			,
	|			(ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	|				ИЛИ ДокументПоступления ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ИЛИ ДокументПоступления ССЫЛКА Справочник.СоглашенияСПоставщиками)
	|				И &УсловиеОтбора) КАК ТаблицаРаспоряжений
	|ГДЕ
	|	ТаблицаРаспоряжений.КОформлениюОстаток <> 0
	|	И &УсловиеОтбора
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРаспоряжений.ДокументПоступления";
	
	УсловиеОтбора = "ИСТИНА";
	Если ЗначениеЗаполнено(Организация) Тогда
		УсловиеОтбора = УсловиеОтбора + "
		|И ДокументПоступления.Организация = &Организация";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Склад) Тогда
		УсловиеОтбора = УсловиеОтбора + "
		|И ДокументПоступления.Склад = &Склад";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МассивСсылок) Тогда
		УсловиеОтбора = УсловиеОтбора + "
		|И ДокументПоступления.Ссылка В (&МассивСсылок)";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбора", УсловиеОтбора);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ЕстьЗаказыКОформлению(Организация = Неопределено, Склад = Неопределено) Экспорт
	
	Если НЕ (ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПоставщику)
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыПоставщикам)
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюПоступления)) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросаЗаказыКОформлению(Организация, Склад);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВЫБРАТЬ", "ВЫБРАТЬ ПЕРВЫЕ 1");

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ЕстьРаспоряженияНаПриемку(Организация = Неопределено, Склад = Неопределено) Экспорт
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюПоступления) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросаРаспоряженияНаПриемку(Организация, Склад);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВЫБРАТЬ РАЗЛИЧНЫЕ", "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1");

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Возврат Не Запрос.Выполнить().Пустой();
		
КонецФункции

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Организация = Параметры.Организация;
	Склад = Параметры.Склад;
	
	ПоказыватьЗаказы = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыПоставщикам")
		И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПоставщику)
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыПоставщикам)
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюПоступления);
	
	ПоказыватьРаспоряженияНаПриемку = СкладыСервер.ЕстьОрдерныйНаПоступлениеСклад(Склад,ТекущаяДатаСеанса())
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюПоступления);
		
	ГиперссылкаПоЗаказам = Неопределено;
	ГиперссылкаПоПриемке = Неопределено;
	ТекстГиперссылкиПоЗаказам = НСтр("ru = 'Накладные по заказам'");
	ТекстГиперссылкиПоПриемке = НСтр("ru = 'Накладные по приемке'");
	
	Если ПоказыватьЗаказы Тогда
		ГиперссылкаПоЗаказам = Новый ФорматированнаяСтрока(ТекстГиперссылкиПоЗаказам,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСпискаКОформлениюПоЗаказам());
	КонецЕсли;
	
	Если ПоказыватьРаспоряженияНаПриемку Тогда
		ГиперссылкаПоПриемке = Новый ФорматированнаяСтрока(ТекстГиперссылкиПоПриемке,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСпискаКОформлениюПоПриемке());
	КонецЕсли;
	
	Если ПоказыватьЗаказы
			И ЕстьЗаказыКОформлению(Организация, Склад) Тогда
		ГиперссылкаПоЗаказам = Новый ФорматированнаяСтрока(ТекстГиперссылкиПоЗаказам,,,,
			ИмяФормыСпискаКОформлениюПоЗаказам());
	КонецЕсли;
	
	Если ПоказыватьРаспоряженияНаПриемку
			И ЕстьРаспоряженияНаПриемку(Организация, Склад) Тогда
		ГиперссылкаПоПриемке = Новый ФорматированнаяСтрока(ТекстГиперссылкиПоПриемке,,,,
			ИмяФормыСпискаКОформлениюПоПриемке());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГиперссылкаПоЗаказам)
		И ЗначениеЗаполнено(ГиперссылкаПоПриемке) Тогда
		Возврат Новый ФорматированнаяСтрока(ГиперссылкаПоЗаказам, "; ", ГиперссылкаПоПриемке);
	ИначеЕсли ЗначениеЗаполнено(ГиперссылкаПоЗаказам) Тогда
		Возврат Новый ФорматированнаяСтрока(ГиперссылкаПоЗаказам);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСпискаКОформлениюПоЗаказам() Экспорт
	
	Возврат "Обработка.ЖурналДокументовЗакупки.Форма.СписокКОформлениюПоЗаказам";
	
КонецФункции

Функция ИмяФормыСпискаКОформлениюПоПриемке() Экспорт
	
	Возврат "Обработка.ЖурналДокументовЗакупки.Форма.СписокКОформлениюПоПриемке";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
